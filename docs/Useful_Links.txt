1) Interesting articles:
https://github.com/SpotlightKid/mrequests
http://stuartcheshire.org/papers/NagleDelayedAck/
https://github.com/turfptax/ugit
https://iot49.org/projects/internet/ota.html - OTA updates of MicroPython

2) To check free space: import os   os.statvfs('/'). Should show something like
(4096, 4096, 3584, 3580, 3580, 0, 0, 0, 0, 255).  
File system block size, Fragment size, Size of fs in f_frsize units, Number of free blocks, 
Number of free blocks for unprivileged users, Number of inodes, Number of free inodes, 
Number of free inodes for unprivileged users, Mount flags, Maximum filename length
So file system size is 4096 x 3584 = 14 MB and free space is 4096 x 3580 = 13.98 MB
To see free memory: import gc    gc.mem_free()   Should be approx. 8,125,472 = 7.75 MB - Note: this has changed with v1.21. See https://github.com/orgs/micropython/discussions/12316

3) To debug inside MicroPython .c files use #include "py/runtime.h", mp_printf(&mp_plat_print, "Test:%u %p\n", TestVariable, &TestFunction);

4) To run a .py file use exec(open("code.py").read())

5) To make mpy files:
sudo apt-get install git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util
sudo apt-get install python-is-python3 python3-pip python3-setuptools
pip3 install pyelftools>=0.25

a. Install the ESP32 toolchain (Different toolchain is required for different architecture)
	a. mkdir esp
	b. cd esp
	c. git clone -b v4.4 --recursive https://github.com/espressif/esp-idf.git
	d. cd esp-idf
	e. ./install.sh
	f. nano ~/.bash_aliases
	g. add alias esp32_idf='. $HOME/esp/esp-idf/export.sh'
	   save&exit

b. Download micropython resp and compile mpy-cross compiler
	a. cd $HOME
	b. git clone -b v1.19.1 https://github.com/micropython/micropython.git
	c. cd micropython/mpy-cross
	d. make
	e. nano ~/.bash_aliases
	f. add alias mpy_cross='$HOME/micropython/mpy-cross/./mpy-cross'
   save&exit

c. Test with C code - check https://github.com/micropython/micropython/issues/6264 if you get a ".data non-empty" error
	a. cd $HOME/micropython/examples/natmod/features0
	b. edit Makefile to change ARCH = xtensawin and set module name
	c. esp32_idf (must be called before every compilation if native C files included)
	d. make

d. Test with MicroPython code
  i. Create test.py:
     def SayHi():
        print("Hello there")
  ii. mpy_cross
  
6) DACs that don't need a master clock: MAX98357A, UDA1334A, PCM5102

7) To load code using mip: 
First - connect to WiFi. Then mip.install("github:eichblatt/litestream/timemachine/package.json")

8) To see detailed memory usage: import micropython    micropython.mem_info(1)

9) Github command line: 
Local: git status,  git add,  git clone url foldername,  git commit xxxx -m "message" 
To send to GitHub: git push

10) Micropython Issues
https://github.com/orgs/micropython/discussions/12223

11) Buying an ESP32
https://www.aliexpress.us/item/3256804431007418.html
Color: ESP32-S3 N16R8

12) Turning off the NeoPixel LED on the dev board
from machine import Pin
from neopixel import NeoPixel
pin = Pin(48, Pin.OUT)  # set GPIO48 to output to drive NeoPixels
np = NeoPixel(pin, 1)   # create NeoPixel driver on GPIO48 for 1 pixel
np[0] = (0, 0, 0)       # set the LED to black
np.write()              # write data to all pixels

13) Top level link to Grateful Dead archive
https://archive.org/browse.php?collection=GratefulDead&field=year

14) API
https://able-folio-397115.ue.r.appspot.com/track_urls/1975-08-13?collections=GratefulDead&ntape=0

15) UART Bridge
https://github.com/Noltari/pico-uart-bridge

16) To debug Guru Meditation Errors
C:\Users\mike\OneDrive\Documents\ArduinoData\packages\esp32\tools\xtensa-esp32s3-elf-gcc\esp-2021r2-patch5-8.4.0\bin\xtensa-esp32s3-elf-addr2line.exe -pfiaC -e \\wsl.localhost\Ubuntu-20.04\home\mikealex\micropython\ports\esp32\build-ESP32_GENERIC_S3-SPIRAM_OCT\micropython.elf <address>
Where <address> is the value of the PC shown in the stack dump

17) USB Audio 
https://www.edn.com/fundamentals-of-usb-audio/